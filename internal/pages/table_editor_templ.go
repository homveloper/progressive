// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "progressive/internal/components"

func TableEditorPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\"><!-- Header --><div class=\"mb-6\"><nav class=\"flex\" aria-label=\"Breadcrumb\"><ol class=\"flex items-center space-x-4\"><li><a href=\"/dashboard\" class=\"text-gray-400 hover:text-gray-500\">대시보드</a></li><li class=\"flex items-center\"><svg class=\"flex-shrink-0 h-5 w-5 text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\"></path></svg> <span class=\"ml-4 text-gray-900 font-medium\">테이블 편집</span></li></ol></nav><div class=\"mt-4\"><div><h1 class=\"text-2xl font-bold text-gray-900\" id=\"table-title\">테이블 편집기</h1><p class=\"mt-1 text-sm text-gray-600\">JSON Schema 기반 구조화된 데이터 편집</p></div></div></div><!-- Filter and Search Bar --><div class=\"mb-6 bg-white rounded-lg border border-gray-200 p-4\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center space-x-4\"><div class=\"relative\"><svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg> <input type=\"text\" placeholder=\"레코드 검색...\" class=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md text-sm focus:ring-blue-500 focus:border-blue-500\"></div><button class=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"><svg class=\"w-4 h-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.707A1 1 0 013 7V4z\"></path></svg> 필터</button> <button class=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"><svg class=\"w-4 h-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z\"></path></svg> 정렬</button></div><div class=\"text-sm text-gray-600\">총 <span id=\"total-records\" class=\"font-medium\">0</span>개 레코드</div></div></div><!-- Data Grid Container --><div class=\"bg-white rounded-lg border border-gray-200 overflow-hidden\"><!-- Grid Header (Column Headers) --><div class=\"border-b border-gray-200 bg-gray-50\"><div class=\"grid auto-cols-fr grid-flow-col gap-0\" id=\"grid-header\"><!-- Dynamic column headers will be inserted here --><div class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200\">로딩 중...</div></div></div><!-- Grid Body (Data Rows) --><div class=\"bg-white\" id=\"grid-body\"><!-- Loading state --><div class=\"p-8 text-center text-gray-500\" id=\"loading-state\"><svg class=\"mx-auto h-8 w-8 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle> <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg><p class=\"mt-2\">데이터를 불러오는 중...</p></div><!-- Empty state --><div class=\"p-8 text-center text-gray-500 hidden\" id=\"empty-state\"><svg class=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M3 14h18m-9-4v8m-7 0V4a1 1 0 011-1h14a1 1 0 011 1v16a1 1 0 01-1 1H5a1 1 0 01-1-1z\"></path></svg><h3 class=\"mt-2 text-sm font-medium text-gray-900\">데이터 없음</h3><p class=\"mt-1 text-sm text-gray-500\">첫 번째 레코드를 추가해보세요.</p><div class=\"mt-6\"><button class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"><svg class=\"w-4 h-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path></svg> 레코드 추가</button></div></div></div></div><!-- Alternative Views Demo --><div class=\"mt-8 grid grid-cols-1 lg:grid-cols-3 gap-6\"><!-- Card View Demo --><div class=\"bg-white rounded-lg border border-gray-200 p-6\"><h3 class=\"text-lg font-medium text-gray-900 mb-4\">카드 뷰</h3><div class=\"space-y-4\" id=\"card-view\"><!-- Sample cards --><div class=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\"><div class=\"flex justify-between items-start mb-2\"><h4 class=\"text-sm font-medium text-gray-900\">샘플 레코드 1</h4><button class=\"text-gray-400 hover:text-gray-600\"><svg class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg></button></div><div class=\"text-sm text-gray-600 space-y-1\"><div>이름: 김테스트</div><div>이메일: test@example.com</div><div>상태: 활성</div></div></div><div class=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\"><div class=\"flex justify-between items-start mb-2\"><h4 class=\"text-sm font-medium text-gray-900\">샘플 레코드 2</h4><button class=\"text-gray-400 hover:text-gray-600\"><svg class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg></button></div><div class=\"text-sm text-gray-600 space-y-1\"><div>이름: 이샘플</div><div>이메일: sample@example.com</div><div>상태: 대기</div></div></div></div></div><!-- JSON Editor Demo --><div class=\"bg-white rounded-lg border border-gray-200 p-6\"><h3 class=\"text-lg font-medium text-gray-900 mb-4\">JSON 에디터</h3><div class=\"relative\"><textarea class=\"w-full h-40 px-3 py-2 border border-gray-300 rounded-md font-mono text-sm focus:ring-blue-500 focus:border-blue-500\" placeholder=\"JSON 형식으로 직접 편집...\" id=\"json-editor\"></textarea> <button class=\"absolute bottom-3 right-3 px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700\">적용</button></div></div><!-- Form Editor Demo --><div class=\"bg-white rounded-lg border border-gray-200 p-6\"><h3 class=\"text-lg font-medium text-gray-900 mb-4\">폼 에디터</h3><div class=\"space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">이름 *</label> <input type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-blue-500 focus:border-blue-500\" value=\"김테스트\"></div><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">이메일 *</label> <input type=\"email\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-blue-500 focus:border-blue-500\" value=\"test@example.com\"></div><div><label class=\"block text-sm font-medium text-gray-700 mb-1\">상태</label> <select class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-blue-500 focus:border-blue-500\"><option value=\"active\">활성</option> <option value=\"inactive\">비활성</option> <option value=\"pending\">대기</option></select></div><button class=\"w-full px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700\">저장</button></div></div></div></div><!-- Inline Edit Styles --> <style>\n\t\t\t.editable-cell {\n\t\t\t\tposition: relative;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.editable-cell.editing {\n\t\t\t\tpadding: 0 !important;\n\t\t\t}\n\t\t\t\n\t\t\t.editable-cell:hover {\n\t\t\t\tbackground-color: #f3f4f6;\n\t\t\t}\n\t\t\t\n\t\t\t.editable-cell.editing:hover {\n\t\t\t\tbackground-color: white;\n\t\t\t}\n\t\t\t\n\t\t\t.cell-input {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tborder: 2px solid #3b82f6;\n\t\t\t\tbackground: white;\n\t\t\t\tpadding: 12px 16px;\n\t\t\t\toutline: none;\n\t\t\t\tfont-size: 0.875rem;\n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t\n\t\t\t.cell-textarea {\n\t\t\t\twidth: 100%;\n\t\t\t\tmin-height: 100px;\n\t\t\t\tborder: 2px solid #3b82f6;\n\t\t\t\tbackground: white;\n\t\t\t\tpadding: 8px 12px;\n\t\t\t\toutline: none;\n\t\t\t\tfont-size: 0.875rem;\n\t\t\t\tborder-radius: 4px;\n\t\t\t\tresize: vertical;\n\t\t\t\tfont-family: 'Courier New', monospace;\n\t\t\t}\n\t\t\t\n\t\t\t.edit-indicator {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 2px;\n\t\t\t\tright: 2px;\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\t\t\t\tborder-left: 8px solid transparent;\n\t\t\t\tborder-right: 8px solid #3b82f6;\n\t\t\t\tborder-bottom: 8px solid transparent;\n\t\t\t\tborder-top: 8px solid #3b82f6;\n\t\t\t}\n\t\t\t\n\t\t\t.mode-toggle.active {\n\t\t\t\tbackground-color: #3b82f6 !important;\n\t\t\t\tcolor: white !important;\n\t\t\t}\n\t\t\t\n\t\t\t.grid-readonly .editable-cell:hover {\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tcursor: default;\n\t\t\t}\n\t\t\t\n\t\t\t.grid-readonly .editable-cell {\n\t\t\t\tcursor: default;\n\t\t\t}\n\t\t\t\n\t\t\t.selected-row {\n\t\t\t\tbackground-color: #dbeafe !important;\n\t\t\t}\n\t\t\t\n\t\t\t.selected-row:hover {\n\t\t\t\tbackground-color: #bfdbfe !important;\n\t\t\t}\n\t\t\t\n\t\t\t/* Floating Menu Styles */\n\t\t\t#floating-menu {\n\t\t\t\tanimation: slideUp 0.3s ease-out;\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes slideUp {\n\t\t\t\tfrom {\n\t\t\t\t\topacity: 0;\n\t\t\t\t\ttransform: translate(-50%, 20px);\n\t\t\t\t}\n\t\t\t\tto {\n\t\t\t\t\topacity: 1;\n\t\t\t\t\ttransform: translate(-50%, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t#floating-menu .bg-white {\n\t\t\t\tbackdrop-filter: blur(10px);\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.95);\n\t\t\t}\n\t\t\t\n\t\t\t#floating-menu button {\n\t\t\t\ttransition: all 0.2s ease;\n\t\t\t}\n\t\t\t\n\t\t\t#floating-menu button:hover {\n\t\t\t\ttransform: scale(1.1);\n\t\t\t}\n\t\t\t\n\t\t\t#floating-menu button:active {\n\t\t\t\ttransform: scale(0.95);\n\t\t\t}\n\t\t\t\n\t\t\t/* Add some bottom padding to avoid overlap */\n\t\t\tbody {\n\t\t\t\tpadding-bottom: 100px;\n\t\t\t}\n\t\t</style> <!-- Floating Action Menu --> <div id=\"floating-menu\" class=\"fixed bottom-6 left-1/2 transform -translate-x-1/2 z-40\"><div class=\"bg-white rounded-full shadow-lg border border-gray-200 px-4 py-2\"><div class=\"flex items-center space-x-1\"><!-- View/Edit Mode Toggle --><div class=\"flex items-center bg-gray-100 rounded-full p-1\"><button id=\"viewer-mode\" class=\"mode-toggle active w-10 h-10 rounded-full flex items-center justify-center text-white bg-blue-600 hover:bg-blue-700 transition-colors\" title=\"뷰어 모드\"><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path></svg></button> <button id=\"edit-mode\" class=\"mode-toggle w-10 h-10 rounded-full flex items-center justify-center text-gray-600 hover:text-gray-800 hover:bg-gray-200 transition-colors\" title=\"편집 모드\"><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path></svg></button></div><!-- Divider --><div class=\"w-px h-8 bg-gray-300 mx-2\"></div><!-- Add Record --><button id=\"add-record\" class=\"w-10 h-10 rounded-full flex items-center justify-center text-white bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\" title=\"레코드 추가\" disabled><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path></svg></button><!-- Delete Selected --><button id=\"delete-selected\" class=\"w-10 h-10 rounded-full flex items-center justify-center text-white bg-red-600 hover:bg-red-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\" title=\"선택 삭제\" disabled><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1-1H8a1 1 0 00-1 1v3M4 7h16\"></path></svg></button><!-- Divider --><div class=\"w-px h-8 bg-gray-300 mx-2\"></div><!-- Export --><button id=\"export-data\" class=\"w-10 h-10 rounded-full flex items-center justify-center text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-colors\" title=\"내보내기\"><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg></button><!-- Settings --><button id=\"settings\" class=\"w-10 h-10 rounded-full flex items-center justify-center text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-colors\" title=\"설정\"><svg class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg></button></div></div></div><!-- Delete Confirmation Modal --> <div id=\"delete-modal\" class=\"fixed inset-0 bg-black bg-opacity-50 hidden z-50\"><div class=\"flex items-center justify-center min-h-screen px-4\"><div class=\"bg-white rounded-lg max-w-md w-full\"><div class=\"px-6 py-4\"><div class=\"flex items-center\"><svg class=\"w-6 h-6 text-red-600 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.854-.833-2.624 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path></svg><div><h3 class=\"text-lg font-medium text-gray-900\">레코드 삭제</h3><p class=\"text-sm text-gray-500 mt-1\" id=\"delete-message\">선택한 레코드를 삭제하시겠습니까?</p></div></div></div><div class=\"px-6 py-4 border-t border-gray-200 flex justify-end space-x-3\"><button id=\"cancel-delete\" class=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\">취소</button> <button id=\"confirm-delete\" class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\">삭제</button></div></div></div></div><!-- JavaScript for table functionality --> <script>\n\t\t\t// Global state\n\t\t\tlet isEditMode = false;\n\t\t\tlet currentEditCell = null;\n\t\t\tlet selectedRecords = new Set();\n\t\t\t\n\t\t\t// Mock data and schema for demonstration\n\t\t\tlet tableData = {\n\t\t\t\tname: \"고객 관리\",\n\t\t\t\tschema: {\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tname: { type: \"string\", title: \"이름\" },\n\t\t\t\t\t\temail: { type: \"string\", format: \"email\", title: \"이메일\" },\n\t\t\t\t\t\tcompany: { type: \"string\", title: \"회사명\" },\n\t\t\t\t\t\tstatus: { type: \"string\", enum: [\"활성\", \"비활성\", \"대기\"], title: \"상태\" },\n\t\t\t\t\t\tcreated_at: { type: \"string\", format: \"date\", title: \"등록일\" }\n\t\t\t\t\t},\n\t\t\t\t\trequired: [\"name\", \"email\"]\n\t\t\t\t},\n\t\t\t\trecords: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1\",\n\t\t\t\t\t\tname: \"김테스트\",\n\t\t\t\t\t\temail: \"kim@example.com\",\n\t\t\t\t\t\tcompany: \"테스트 회사\",\n\t\t\t\t\t\tstatus: \"활성\",\n\t\t\t\t\t\tcreated_at: \"2024-01-15\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2\", \n\t\t\t\t\t\tname: \"이샘플\",\n\t\t\t\t\t\temail: \"lee@example.com\",\n\t\t\t\t\t\tcompany: \"샘플 기업\",\n\t\t\t\t\t\tstatus: \"대기\",\n\t\t\t\t\t\tcreated_at: \"2024-01-16\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tconsole.log('🚀 테이블 편집 페이지 로드됨');\n\t\t\t\tloadTableFromLocalStorage();\n\t\t\t\tinitializeTableEditor();\n\t\t\t\t\n\t\t\t\t// Initialize JSON editor with sample data\n\t\t\t\tconst jsonEditor = document.getElementById('json-editor');\n\t\t\t\tif (jsonEditor) {\n\t\t\t\t\tjsonEditor.value = JSON.stringify({\n\t\t\t\t\t\t\"name\": \"김테스트\",\n\t\t\t\t\t\t\"email\": \"test@example.com\",\n\t\t\t\t\t\t\"status\": \"active\", \n\t\t\t\t\t\t\"created_at\": \"2024-01-15\"\n\t\t\t\t\t}, null, 2);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tfunction loadTableFromLocalStorage() {\n\t\t\t\tconsole.log('📂 로컬 스토리지에서 테이블 데이터 로드 시도');\n\t\t\t\t\n\t\t\t\t// URL에서 테이블 ID 추출\n\t\t\t\tconst pathParts = window.location.pathname.split('/');\n\t\t\t\tconst tableId = pathParts[pathParts.length - 1];\n\t\t\t\tconsole.log('🆔 테이블 ID:', tableId);\n\t\t\t\t\n\t\t\t\tif (!tableId || tableId === 'table') {\n\t\t\t\t\tconsole.warn('⚠️ 유효하지 않은 테이블 ID');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 로컬 스토리지에서 테이블 데이터 로드\n\t\t\t\tconst storedData = localStorage.getItem(`table_${tableId}`);\n\t\t\t\tif (storedData) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst loadedData = JSON.parse(storedData);\n\t\t\t\t\t\tconsole.log('✅ 테이블 데이터 로드 성공:', loadedData);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 전역 tableData 업데이트\n\t\t\t\t\t\ttableData = loadedData;\n\t\t\t\t\t\tconsole.log('🔄 전역 tableData 업데이트됨');\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('❌ 테이블 데이터 파싱 오류:', error);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('⚠️ 테이블 데이터를 찾을 수 없음. 기본 데이터 사용');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction initializeTableEditor() {\n\t\t\t\t// Set table title\n\t\t\t\tdocument.getElementById('table-title').textContent = tableData.name;\n\t\t\t\t\n\t\t\t\t// Render grid\n\t\t\t\trenderGrid();\n\t\t\t\t\n\t\t\t\t// Set up event listeners\n\t\t\t\tsetupEventListeners();\n\t\t\t}\n\n\t\t\tfunction renderGrid() {\n\t\t\t\tconst headerContainer = document.getElementById('grid-header');\n\t\t\t\tconst bodyContainer = document.getElementById('grid-body');\n\t\t\t\t\n\t\t\t\t// Clear loading state\n\t\t\t\tdocument.getElementById('loading-state').classList.add('hidden');\n\t\t\t\t\n\t\t\t\tif (tableData.records.length === 0) {\n\t\t\t\t\tdocument.getElementById('empty-state').classList.remove('hidden');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Render header\n\t\t\t\tconst properties = tableData.schema.properties;\n\t\t\t\theaderContainer.innerHTML = '';\n\t\t\t\t\n\t\t\t\t// Add row selection column with select all checkbox\n\t\t\t\theaderContainer.innerHTML = `\n\t\t\t\t\t<div class=\"px-3 py-3 text-left border-r border-gray-200 w-12\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"select-all\" class=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\">\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\t// Add property headers\n\t\t\t\tfor (const [key, prop] of Object.entries(properties)) {\n\t\t\t\t\tconst required = tableData.schema.required && tableData.schema.required.includes(key) ? '*' : '';\n\t\t\t\t\theaderContainer.innerHTML += `\n\t\t\t\t\t\t<div class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-r border-gray-200\">\n\t\t\t\t\t\t\t${prop.title || key}${required}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Remove actions column (no longer needed)\n\t\t\t\t\n\t\t\t\t// Render body\n\t\t\t\tbodyContainer.innerHTML = '';\n\t\t\t\ttableData.records.forEach((record, index) => {\n\t\t\t\t\tconst row = document.createElement('div');\n\t\t\t\t\trow.className = 'grid auto-cols-fr grid-flow-col gap-0 border-b border-gray-200 hover:bg-gray-50';\n\t\t\t\t\trow.dataset.recordId = record.id;\n\t\t\t\t\t\n\t\t\t\t\t// Row selection checkbox\n\t\t\t\t\tconst checkboxDiv = document.createElement('div');\n\t\t\t\t\tcheckboxDiv.className = 'px-3 py-4 border-r border-gray-200 w-12';\n\t\t\t\t\tcheckboxDiv.innerHTML = `\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"record-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500\" \n\t\t\t\t\t\t\t   data-record-id=\"${record.id}\" ${selectedRecords.has(record.id) ? 'checked' : ''}>\n\t\t\t\t\t`;\n\t\t\t\t\trow.appendChild(checkboxDiv);\n\t\t\t\t\t\n\t\t\t\t\t// Data cells\n\t\t\t\t\tfor (const [key, prop] of Object.entries(properties)) {\n\t\t\t\t\t\tconst value = record[key] || '';\n\t\t\t\t\t\tconst cellDiv = document.createElement('div');\n\t\t\t\t\t\tcellDiv.className = 'editable-cell px-6 py-4 text-sm text-gray-900 border-r border-gray-200';\n\t\t\t\t\t\tcellDiv.dataset.field = key;\n\t\t\t\t\t\tcellDiv.dataset.recordId = record.id;\n\t\t\t\t\t\tcellDiv.dataset.dataType = prop.type;\n\t\t\t\t\t\tcellDiv.innerHTML = formatValue(value, prop);\n\t\t\t\t\t\trow.appendChild(cellDiv);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add selected row styling\n\t\t\t\t\tif (selectedRecords.has(record.id)) {\n\t\t\t\t\t\trow.classList.add('selected-row');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbodyContainer.appendChild(row);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Update record count\n\t\t\t\tdocument.getElementById('total-records').textContent = tableData.records.length;\n\t\t\t}\n\n\t\t\tfunction formatValue(value, prop) {\n\t\t\t\tif (!value) return '<span class=\"text-gray-400\">-</span>';\n\t\t\t\t\n\t\t\t\tif (prop.format === 'date') {\n\t\t\t\t\treturn new Date(value).toLocaleDateString('ko-KR');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (prop.enum && prop.enum.includes(value)) {\n\t\t\t\t\tconst statusColors = {\n\t\t\t\t\t\t'활성': 'bg-green-100 text-green-800',\n\t\t\t\t\t\t'비활성': 'bg-red-100 text-red-800',\n\t\t\t\t\t\t'대기': 'bg-yellow-100 text-yellow-800'\n\t\t\t\t\t};\n\t\t\t\t\tconst colorClass = statusColors[value] || 'bg-gray-100 text-gray-800';\n\t\t\t\t\treturn `<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass}\">${value}</span>`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfunction setupEventListeners() {\n\t\t\t\tconsole.log('🔧 이벤트 리스너 설정 중...');\n\t\t\t\t\n\t\t\t\t// Mode toggle buttons\n\t\t\t\tdocument.getElementById('viewer-mode').addEventListener('click', () => {\n\t\t\t\t\tconsole.log('👁️ 뷰어 모드로 전환');\n\t\t\t\t\tswitchToViewerMode();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tdocument.getElementById('edit-mode').addEventListener('click', () => {\n\t\t\t\t\tconsole.log('✏️ 편집 모드로 전환');\n\t\t\t\t\tswitchToEditMode();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Add record button (only enabled in edit mode)\n\t\t\t\tdocument.getElementById('add-record').addEventListener('click', () => {\n\t\t\t\t\tif (!isEditMode) return;\n\t\t\t\t\tconsole.log('➕ 새 레코드 추가');\n\t\t\t\t\taddNewRecord();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Cell double-click for inline editing\n\t\t\t\tdocument.addEventListener('dblclick', (e) => {\n\t\t\t\t\tif (!isEditMode) return;\n\t\t\t\t\tconst cell = e.target.closest('.editable-cell');\n\t\t\t\t\tif (cell && !cell.classList.contains('editing')) {\n\t\t\t\t\t\tconsole.log('🖱️ 셀 더블클릭:', cell.dataset);\n\t\t\t\t\t\tstartInlineEdit(cell);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Selected delete button\n\t\t\t\tdocument.getElementById('delete-selected').addEventListener('click', () => {\n\t\t\t\t\tif (selectedRecords.size > 0) {\n\t\t\t\t\t\tconsole.log('🗑️ 선택된 레코드 삭제:', Array.from(selectedRecords));\n\t\t\t\t\t\tshowDeleteModal();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Checkbox events\n\t\t\t\tdocument.addEventListener('change', (e) => {\n\t\t\t\t\tif (e.target.id === 'select-all') {\n\t\t\t\t\t\thandleSelectAll(e.target.checked);\n\t\t\t\t\t} else if (e.target.classList.contains('record-checkbox')) {\n\t\t\t\t\t\thandleRecordSelect(e.target.dataset.recordId, e.target.checked);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Global click handler to finish editing\n\t\t\t\tdocument.addEventListener('click', (e) => {\n\t\t\t\t\tif (currentEditCell && !e.target.closest('.editable-cell.editing')) {\n\t\t\t\t\t\tconsole.log('💾 편집 완료 (클릭 외부)');\n\t\t\t\t\t\tfinishInlineEdit();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Escape key to cancel editing\n\t\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\t\tif (e.key === 'Escape' && currentEditCell) {\n\t\t\t\t\t\tconsole.log('❌ 편집 취소 (ESC)');\n\t\t\t\t\t\tcancelInlineEdit();\n\t\t\t\t\t}\n\t\t\t\t\tif (e.key === 'Enter' && currentEditCell && !e.shiftKey) {\n\t\t\t\t\t\tconsole.log('💾 편집 완료 (Enter)');\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfinishInlineEdit();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Delete modal events\n\t\t\t\tdocument.getElementById('cancel-delete').addEventListener('click', hideDeleteModal);\n\t\t\t\tdocument.getElementById('confirm-delete').addEventListener('click', confirmDelete);\n\t\t\t\tdocument.getElementById('delete-modal').addEventListener('click', (e) => {\n\t\t\t\t\tif (e.target.id === 'delete-modal') {\n\t\t\t\t\t\thideDeleteModal();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Export and Settings buttons\n\t\t\t\tdocument.getElementById('export-data').addEventListener('click', () => {\n\t\t\t\t\tconsole.log('📤 데이터 내보내기');\n\t\t\t\t\texportTableData();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tdocument.getElementById('settings').addEventListener('click', () => {\n\t\t\t\t\tconsole.log('⚙️ 설정 메뉴');\n\t\t\t\t\t// TODO: 설정 기능 구현\n\t\t\t\t\talert('설정 기능은 추후 구현 예정입니다.');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Mode switching functions\n\t\t\tfunction switchToViewerMode() {\n\t\t\t\tisEditMode = false;\n\t\t\t\tdocument.getElementById('viewer-mode').classList.add('active');\n\t\t\t\tdocument.getElementById('edit-mode').classList.remove('active');\n\t\t\t\tdocument.getElementById('add-record').disabled = true;\n\t\t\t\tdocument.getElementById('delete-selected').disabled = true;\n\t\t\t\tdocument.getElementById('grid-body').classList.add('grid-readonly');\n\t\t\t\t\n\t\t\t\t// Cancel any active editing\n\t\t\t\tif (currentEditCell) {\n\t\t\t\t\tcancelInlineEdit();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Clear selection in viewer mode\n\t\t\t\tselectedRecords.clear();\n\t\t\t\tupdateSelectionUI();\n\t\t\t\t\n\t\t\t\tconsole.log('📖 뷰어 모드 활성화');\n\t\t\t}\n\t\t\t\n\t\t\tfunction switchToEditMode() {\n\t\t\t\tisEditMode = true;\n\t\t\t\tdocument.getElementById('edit-mode').classList.add('active');\n\t\t\t\tdocument.getElementById('viewer-mode').classList.remove('active');\n\t\t\t\tdocument.getElementById('add-record').disabled = false;\n\t\t\t\tdocument.getElementById('grid-body').classList.remove('grid-readonly');\n\t\t\t\t\n\t\t\t\tconsole.log('✏️ 편집 모드 활성화');\n\t\t\t}\n\t\t\t\n\t\t\t// Inline editing functions\n\t\t\tfunction startInlineEdit(cell) {\n\t\t\t\tif (currentEditCell) {\n\t\t\t\t\tfinishInlineEdit();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentEditCell = cell;\n\t\t\t\tconst field = cell.dataset.field;\n\t\t\t\tconst recordId = cell.dataset.recordId;\n\t\t\t\tconst dataType = cell.dataset.dataType;\n\t\t\t\tconst record = tableData.records.find(r => r.id === recordId);\n\t\t\t\tconst currentValue = record[field] || '';\n\t\t\t\t\n\t\t\t\tconsole.log('📝 인라인 편집 시작:', { field, recordId, dataType, currentValue });\n\t\t\t\t\n\t\t\t\tcell.classList.add('editing');\n\t\t\t\tcell.dataset.originalValue = currentValue;\n\t\t\t\t\n\t\t\t\t// Get schema property for this field\n\t\t\t\tconst prop = tableData.schema.properties[field];\n\t\t\t\tconst isComplexType = typeof currentValue === 'object' || prop.type === 'object';\n\t\t\t\t\n\t\t\t\tlet input;\n\t\t\t\tif (isComplexType) {\n\t\t\t\t\t// For complex objects, use textarea with JSON\n\t\t\t\t\tinput = document.createElement('textarea');\n\t\t\t\t\tinput.className = 'cell-textarea';\n\t\t\t\t\tinput.value = JSON.stringify(currentValue, null, 2);\n\t\t\t\t\tinput.placeholder = 'JSON 객체를 편집하세요...';\n\t\t\t\t} else if (prop.enum) {\n\t\t\t\t\t// For enum fields, use select\n\t\t\t\t\tinput = document.createElement('select');\n\t\t\t\t\tinput.className = 'cell-input';\n\t\t\t\t\tprop.enum.forEach(option => {\n\t\t\t\t\t\tconst opt = document.createElement('option');\n\t\t\t\t\t\topt.value = option;\n\t\t\t\t\t\topt.textContent = option;\n\t\t\t\t\t\topt.selected = option === currentValue;\n\t\t\t\t\t\tinput.appendChild(opt);\n\t\t\t\t\t});\n\t\t\t\t} else if (prop.type === 'boolean') {\n\t\t\t\t\t// For boolean fields, use select\n\t\t\t\t\tinput = document.createElement('select');\n\t\t\t\t\tinput.className = 'cell-input';\n\t\t\t\t\t['true', 'false'].forEach(option => {\n\t\t\t\t\t\tconst opt = document.createElement('option');\n\t\t\t\t\t\topt.value = option;\n\t\t\t\t\t\topt.textContent = option === 'true' ? '참' : '거짓';\n\t\t\t\t\t\topt.selected = String(currentValue) === option;\n\t\t\t\t\t\tinput.appendChild(opt);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// For simple fields, use input\n\t\t\t\t\tinput = document.createElement('input');\n\t\t\t\t\tinput.className = 'cell-input';\n\t\t\t\t\tinput.type = getInputType(prop);\n\t\t\t\t\tinput.value = currentValue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcell.innerHTML = '';\n\t\t\t\tcell.appendChild(input);\n\t\t\t\tinput.focus();\n\t\t\t\t\n\t\t\t\tif (input.select) {\n\t\t\t\t\tinput.select();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction finishInlineEdit() {\n\t\t\t\tif (!currentEditCell) return;\n\t\t\t\t\n\t\t\t\tconst input = currentEditCell.querySelector('input, select, textarea');\n\t\t\t\tconst field = currentEditCell.dataset.field;\n\t\t\t\tconst recordId = currentEditCell.dataset.recordId;\n\t\t\t\tconst prop = tableData.schema.properties[field];\n\t\t\t\t\n\t\t\t\tlet newValue = input.value;\n\t\t\t\t\n\t\t\t\t// Handle different data types\n\t\t\t\tif (input.tagName === 'TEXTAREA') {\n\t\t\t\t\t// JSON object editing\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewValue = JSON.parse(input.value);\n\t\t\t\t\t\tconsole.log('📝 JSON 파싱 성공:', newValue);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('❌ JSON 파싱 오류:', error);\n\t\t\t\t\t\talert('유효하지 않은 JSON 형식입니다.');\n\t\t\t\t\t\tcancelInlineEdit();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (prop.type === 'boolean') {\n\t\t\t\t\tnewValue = newValue === 'true';\n\t\t\t\t} else if (prop.type === 'integer') {\n\t\t\t\t\tnewValue = parseInt(newValue) || 0;\n\t\t\t\t} else if (prop.type === 'number') {\n\t\t\t\t\tnewValue = parseFloat(newValue) || 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the record\n\t\t\t\tconst record = tableData.records.find(r => r.id === recordId);\n\t\t\t\tif (record) {\n\t\t\t\t\trecord[field] = newValue;\n\t\t\t\t\tconsole.log('💾 값 업데이트:', { field, recordId, newValue });\n\t\t\t\t\t\n\t\t\t\t\t// Save to localStorage\n\t\t\t\t\tsaveTableToLocalStorage();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update cell display\n\t\t\t\tcurrentEditCell.classList.remove('editing');\n\t\t\t\tcurrentEditCell.innerHTML = formatValue(newValue, prop);\n\t\t\t\t\n\t\t\t\tcurrentEditCell = null;\n\t\t\t}\n\t\t\t\n\t\t\tfunction cancelInlineEdit() {\n\t\t\t\tif (!currentEditCell) return;\n\t\t\t\t\n\t\t\t\tconst originalValue = currentEditCell.dataset.originalValue;\n\t\t\t\tconst field = currentEditCell.dataset.field;\n\t\t\t\tconst prop = tableData.schema.properties[field];\n\t\t\t\t\n\t\t\t\tconsole.log('❌ 편집 취소:', { field, originalValue });\n\t\t\t\t\n\t\t\t\tcurrentEditCell.classList.remove('editing');\n\t\t\t\tcurrentEditCell.innerHTML = formatValue(originalValue, prop);\n\t\t\t\tcurrentEditCell = null;\n\t\t\t}\n\t\t\t\n\t\t\tfunction getInputType(prop) {\n\t\t\t\tif (prop.format === 'email') return 'email';\n\t\t\t\tif (prop.format === 'date') return 'date';\n\t\t\t\tif (prop.format === 'date-time') return 'datetime-local';\n\t\t\t\tif (prop.type === 'integer' || prop.type === 'number') return 'number';\n\t\t\t\treturn 'text';\n\t\t\t}\n\t\t\t\n\t\t\tfunction addNewRecord() {\n\t\t\t\tconst newRecord = { id: Date.now().toString() };\n\t\t\t\t\n\t\t\t\t// Initialize with default values based on schema\n\t\t\t\tfor (const [key, prop] of Object.entries(tableData.schema.properties)) {\n\t\t\t\t\tif (prop.type === 'string') {\n\t\t\t\t\t\tnewRecord[key] = '';\n\t\t\t\t\t} else if (prop.type === 'integer' || prop.type === 'number') {\n\t\t\t\t\t\tnewRecord[key] = 0;\n\t\t\t\t\t} else if (prop.type === 'boolean') {\n\t\t\t\t\t\tnewRecord[key] = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewRecord[key] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttableData.records.push(newRecord);\n\t\t\t\tconsole.log('➕ 새 레코드 추가:', newRecord);\n\t\t\t\t\n\t\t\t\trenderGrid();\n\t\t\t\tsaveTableToLocalStorage();\n\t\t\t}\n\t\t\t\n\t\t\t// Checkbox selection functions\n\t\t\tfunction handleSelectAll(checked) {\n\t\t\t\tconsole.log('☑️ 전체 선택:', checked);\n\t\t\t\t\n\t\t\t\tif (checked) {\n\t\t\t\t\t// Select all records\n\t\t\t\t\ttableData.records.forEach(record => {\n\t\t\t\t\t\tselectedRecords.add(record.id);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Deselect all records\n\t\t\t\t\tselectedRecords.clear();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tupdateSelectionUI();\n\t\t\t}\n\t\t\t\n\t\t\tfunction handleRecordSelect(recordId, checked) {\n\t\t\t\tconsole.log('☑️ 레코드 선택:', recordId, checked);\n\t\t\t\t\n\t\t\t\tif (checked) {\n\t\t\t\t\tselectedRecords.add(recordId);\n\t\t\t\t} else {\n\t\t\t\t\tselectedRecords.delete(recordId);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tupdateSelectionUI();\n\t\t\t}\n\t\t\t\n\t\t\tfunction updateSelectionUI() {\n\t\t\t\tconst selectAllCheckbox = document.getElementById('select-all');\n\t\t\t\tconst deleteButton = document.getElementById('delete-selected');\n\t\t\t\t\n\t\t\t\t// Update select all checkbox state\n\t\t\t\tif (selectedRecords.size === 0) {\n\t\t\t\t\tselectAllCheckbox.checked = false;\n\t\t\t\t\tselectAllCheckbox.indeterminate = false;\n\t\t\t\t} else if (selectedRecords.size === tableData.records.length) {\n\t\t\t\t\tselectAllCheckbox.checked = true;\n\t\t\t\t\tselectAllCheckbox.indeterminate = false;\n\t\t\t\t} else {\n\t\t\t\t\tselectAllCheckbox.checked = false;\n\t\t\t\t\tselectAllCheckbox.indeterminate = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update delete button state\n\t\t\t\tdeleteButton.disabled = selectedRecords.size === 0;\n\t\t\t\t\n\t\t\t\t// Update row selection visual state\n\t\t\t\tdocument.querySelectorAll('.record-checkbox').forEach(checkbox => {\n\t\t\t\t\tconst row = checkbox.closest('[data-record-id]');\n\t\t\t\t\tconst recordId = checkbox.dataset.recordId;\n\t\t\t\t\t\n\t\t\t\t\tif (selectedRecords.has(recordId)) {\n\t\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t\t\trow.classList.add('selected-row');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t\t\trow.classList.remove('selected-row');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tconsole.log('🔄 선택 상태 업데이트:', {\n\t\t\t\t\tselectedCount: selectedRecords.size,\n\t\t\t\t\ttotalCount: tableData.records.length,\n\t\t\t\t\tdeleteButtonEnabled: !deleteButton.disabled\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Delete modal functions\n\t\t\tfunction showDeleteModal() {\n\t\t\t\tconst modal = document.getElementById('delete-modal');\n\t\t\t\tconst message = document.getElementById('delete-message');\n\t\t\t\t\n\t\t\t\tconst count = selectedRecords.size;\n\t\t\t\tmessage.textContent = `선택한 ${count}개의 레코드를 삭제하시겠습니까?`;\n\t\t\t\t\n\t\t\t\tmodal.classList.remove('hidden');\n\t\t\t\tconsole.log('🗑️ 삭제 모달 표시:', count);\n\t\t\t}\n\t\t\t\n\t\t\tfunction hideDeleteModal() {\n\t\t\t\tdocument.getElementById('delete-modal').classList.add('hidden');\n\t\t\t\tconsole.log('❌ 삭제 모달 숨김');\n\t\t\t}\n\t\t\t\n\t\t\tfunction confirmDelete() {\n\t\t\t\tconst recordsToDelete = Array.from(selectedRecords);\n\t\t\t\t\n\t\t\t\tconsole.log('🗑️ 레코드 삭제 확인:', recordsToDelete);\n\t\t\t\t\n\t\t\t\t// Remove selected records from tableData\n\t\t\t\ttableData.records = tableData.records.filter(record => !selectedRecords.has(record.id));\n\t\t\t\t\n\t\t\t\t// Clear selection\n\t\t\t\tselectedRecords.clear();\n\t\t\t\t\n\t\t\t\t// Re-render grid\n\t\t\t\trenderGrid();\n\t\t\t\tsaveTableToLocalStorage();\n\t\t\t\t\n\t\t\t\t// Hide modal\n\t\t\t\thideDeleteModal();\n\t\t\t\t\n\t\t\t\tconsole.log('✅ 레코드 삭제 완료:', recordsToDelete.length + '개');\n\t\t\t}\n\t\t\t\n\t\t\tfunction saveTableToLocalStorage() {\n\t\t\t\tconst pathParts = window.location.pathname.split('/');\n\t\t\t\tconst tableId = pathParts[pathParts.length - 1];\n\t\t\t\t\n\t\t\t\tif (tableId && tableId !== 'table') {\n\t\t\t\t\tlocalStorage.setItem(`table_${tableId}`, JSON.stringify(tableData));\n\t\t\t\t\tconsole.log('💾 로컬 스토리지에 저장됨');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction exportTableData() {\n\t\t\t\tconst exportOptions = [\n\t\t\t\t\t{ label: 'JSON 형식으로 내보내기', action: 'json' },\n\t\t\t\t\t{ label: 'CSV 형식으로 내보내기', action: 'csv' },\n\t\t\t\t\t{ label: '스키마만 내보내기', action: 'schema' }\n\t\t\t\t];\n\t\t\t\t\n\t\t\t\tconst choice = prompt('내보내기 형식을 선택하세요:\\n1. JSON\\n2. CSV\\n3. Schema\\n\\n번호를 입력하세요 (1-3):');\n\t\t\t\t\n\t\t\t\tswitch(choice) {\n\t\t\t\t\tcase '1':\n\t\t\t\t\t\texportAsJSON();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '2':\n\t\t\t\t\t\texportAsCSV();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3':\n\t\t\t\t\t\texportSchema();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (choice !== null) {\n\t\t\t\t\t\t\talert('올바른 번호를 입력하세요 (1-3)');\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction exportAsJSON() {\n\t\t\t\tconst dataToExport = {\n\t\t\t\t\tname: tableData.name,\n\t\t\t\t\tschema: tableData.schema,\n\t\t\t\t\trecords: tableData.records,\n\t\t\t\t\texportedAt: new Date().toISOString()\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tconst blob = new Blob([JSON.stringify(dataToExport, null, 2)], { type: 'application/json' });\n\t\t\t\tdownloadFile(blob, `${tableData.name}_data.json`);\n\t\t\t\tconsole.log('📤 JSON 파일로 내보내기 완료');\n\t\t\t}\n\t\t\t\n\t\t\tfunction exportAsCSV() {\n\t\t\t\tconst headers = Object.keys(tableData.schema.properties);\n\t\t\t\tconst csvContent = [\n\t\t\t\t\theaders.join(','), // Header row\n\t\t\t\t\t...tableData.records.map(record => \n\t\t\t\t\t\theaders.map(header => {\n\t\t\t\t\t\t\tconst value = record[header];\n\t\t\t\t\t\t\t// CSV 형식에 맞게 문자열 처리\n\t\t\t\t\t\t\tif (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n\t\t\t\t\t\t\t\treturn `\"${value.replace(/\"/g, '\"\"')}\"`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value || '';\n\t\t\t\t\t\t}).join(',')\n\t\t\t\t\t)\n\t\t\t\t].join('\\n');\n\t\t\t\t\n\t\t\t\tconst blob = new Blob([csvContent], { type: 'text/csv' });\n\t\t\t\tdownloadFile(blob, `${tableData.name}_data.csv`);\n\t\t\t\tconsole.log('📤 CSV 파일로 내보내기 완료');\n\t\t\t}\n\t\t\t\n\t\t\tfunction exportSchema() {\n\t\t\t\tconst schemaToExport = {\n\t\t\t\t\tname: tableData.name,\n\t\t\t\t\tschema: tableData.schema,\n\t\t\t\t\texportedAt: new Date().toISOString()\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tconst blob = new Blob([JSON.stringify(schemaToExport, null, 2)], { type: 'application/json' });\n\t\t\t\tdownloadFile(blob, `${tableData.name}_schema.json`);\n\t\t\t\tconsole.log('📤 스키마 파일로 내보내기 완료');\n\t\t\t}\n\t\t\t\n\t\t\tfunction downloadFile(blob, filename) {\n\t\t\t\tconst url = URL.createObjectURL(blob);\n\t\t\t\tconst a = document.createElement('a');\n\t\t\t\ta.href = url;\n\t\t\t\ta.download = filename;\n\t\t\t\ta.style.display = 'none';\n\t\t\t\tdocument.body.appendChild(a);\n\t\t\t\ta.click();\n\t\t\t\tdocument.body.removeChild(a);\n\t\t\t\tURL.revokeObjectURL(url);\n\t\t\t}\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.AppLayout("테이블 편집기 - Progressive").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
