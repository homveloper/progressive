// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "progressive/internal/components"
import "progressive/internal/models"

func TableCreatePage(templates []models.TableTemplate) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\"><!-- Header --><div class=\"mb-8\"><nav class=\"flex\" aria-label=\"Breadcrumb\"><ol class=\"flex items-center space-x-4\"><li><a href=\"/dashboard\" class=\"text-gray-400 hover:text-gray-500\">대시보드</a></li><li class=\"flex items-center\"><svg class=\"flex-shrink-0 h-5 w-5 text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\"></path></svg> <span class=\"ml-4 text-gray-900 font-medium\">새 테이블 생성</span></li></ol></nav><div class=\"mt-4\"><h1 class=\"text-3xl font-bold text-gray-900\">새 테이블 생성</h1><p class=\"mt-2 text-gray-600\">JSON Schema를 정의하여 구조화된 데이터 테이블을 생성하세요</p></div></div><!-- Main Content --><div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\"><!-- Left Column: Schema Input --><div class=\"space-y-6\"><div class=\"bg-white border border-gray-200 rounded-lg p-6\"><h2 class=\"text-lg font-semibold text-gray-900 mb-4\">1. JSON Schema 정의</h2><!-- Schema Input Methods --><div class=\"mb-6\"><div class=\"flex border-b border-gray-200\"><button id=\"tab-editor\" class=\"tab-button tab-active px-4 py-2 text-sm font-medium border-b-2 border-blue-500 text-blue-600\">에디터</button> <button id=\"tab-upload\" class=\"tab-button px-4 py-2 text-sm font-medium border-b-2 border-transparent text-gray-500 hover:text-gray-700\">파일 업로드</button> <button id=\"tab-template\" class=\"tab-button px-4 py-2 text-sm font-medium border-b-2 border-transparent text-gray-500 hover:text-gray-700\">템플릿</button></div></div><!-- Tab Content: Editor --><div id=\"content-editor\" class=\"tab-content\"><div class=\"mb-4\"><label for=\"table-name\" class=\"block text-sm font-medium text-gray-700 mb-2\">테이블 이름  <span class=\"text-xs text-gray-500\">(영어, 숫자, 언더스코어만 사용)</span></label> <input type=\"text\" id=\"table-name\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\" placeholder=\"예: customer_management, project_tracker\" pattern=\"[a-zA-Z0-9_]+\" title=\"영어, 숫자, 언더스코어(_)만 사용 가능합니다\"><p class=\"text-xs text-gray-500 mt-1\">영어로 작성해주세요. 띄어쓰기 대신 언더스코어(_)를 사용하세요.</p></div><div class=\"mb-4\"><label class=\"block text-sm font-medium text-gray-700 mb-2\">JSON Schema</label><div class=\"relative\"><textarea id=\"schema-editor\" class=\"w-full h-80 px-3 py-2 border border-gray-300 rounded-md font-mono text-sm focus:ring-blue-500 focus:border-blue-500\" placeholder=\"JSON Schema를 입력하세요...\"></textarea></div></div><div class=\"flex space-x-3\"><button id=\"validate-schema\" class=\"flex-1 bg-blue-100 hover:bg-blue-200 text-blue-700 px-4 py-2 rounded-md text-sm font-medium\">스키마 검증</button> <button id=\"load-example\" class=\"flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-md text-sm font-medium\">예제 로드</button></div></div><!-- Tab Content: Upload --><div id=\"content-upload\" class=\"tab-content hidden\"><div class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors\"><svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"><path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><div class=\"mt-4\"><label for=\"file-upload\" class=\"cursor-pointer\"><span class=\"mt-2 block text-sm font-medium text-gray-900\">JSON Schema 파일을 드래그하거나 클릭하여 업로드</span> <input id=\"file-upload\" name=\"file-upload\" type=\"file\" class=\"sr-only\" accept=\".json,.txt\"></label><p class=\"mt-1 text-xs text-gray-500\">JSON, TXT 파일 지원</p></div></div></div><!-- Tab Content: Templates --><div id=\"content-template\" class=\"tab-content hidden\"><!-- Business Category --><div class=\"mb-6\"><h4 class=\"text-sm font-medium text-gray-700 mb-3 flex items-center\"><svg class=\"w-4 h-4 mr-2 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 002 2h2a2 2 0 002-2V4h-2z\"></path></svg> 비즈니스 템플릿</h4><div class=\"grid grid-cols-1 gap-3\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, template := range templates {
				if template.Category == "business" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<button class=\"template-btn p-4 border border-gray-200 rounded-lg text-left hover:border-blue-300 hover:bg-blue-50\" data-template=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(template.ID)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 116, Col: 154}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><h5 class=\"font-medium text-gray-900\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 string
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(template.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 117, Col: 65}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</h5><p class=\"text-sm text-gray-500 mt-1\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(template.Description)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 118, Col: 72}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</p></button>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div></div><!-- Game Category --><div class=\"mb-6\"><h4 class=\"text-sm font-medium text-gray-700 mb-3 flex items-center\"><svg class=\"w-4 h-4 mr-2 text-purple-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"></path></svg> 게임 템플릿</h4><div class=\"grid grid-cols-1 gap-3\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, template := range templates {
				if template.Category == "game" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<button class=\"template-btn p-4 border border-gray-200 rounded-lg text-left hover:border-purple-300 hover:bg-purple-50\" data-template=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var6 string
					templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(template.ID)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 136, Col: 158}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\"><h5 class=\"font-medium text-gray-900\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var7 string
					templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(template.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 137, Col: 65}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</h5><p class=\"text-sm text-gray-500 mt-1\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var8 string
					templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(template.Description)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/pages/table_create.templ`, Line: 138, Col: 72}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</p></button>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div></div></div></div><!-- Schema Status --><div id=\"schema-status\" class=\"hidden bg-green-50 border border-green-200 rounded-lg p-4\"><div class=\"flex items-center\"><svg class=\"h-5 w-5 text-green-600 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\"></path></svg><div><h4 class=\"text-sm font-medium text-green-800\">스키마 검증 완료</h4><p class=\"text-sm text-green-600 mt-1\" id=\"schema-fields-count\">필드 개수: 0개</p></div></div></div></div><!-- Right Column: Preview --><div class=\"space-y-6\"><div class=\"bg-white border border-gray-200 rounded-lg p-6\"><h2 class=\"text-lg font-semibold text-gray-900 mb-4\">2. 테이블 미리보기</h2><!-- Preview Container --><div id=\"table-preview\" class=\"border border-gray-200 rounded-lg overflow-hidden\"><div class=\"bg-gray-50 px-4 py-3 border-b border-gray-200\"><p class=\"text-sm text-gray-500 text-center\">스키마를 입력하면 테이블 구조가 여기에 표시됩니다</p></div><div class=\"p-8 text-center text-gray-400\"><svg class=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M3 14h18m-9-4v8m-7 0V4a1 1 0 011-1h14a1 1 0 011 1v16a1 1 0 01-1 1H5a1 1 0 01-1-1z\"></path></svg><p class=\"mt-2\">테이블 미리보기</p></div></div></div><!-- Data Input Options --><div class=\"bg-white border border-gray-200 rounded-lg p-6\"><h2 class=\"text-lg font-semibold text-gray-900 mb-4\">3. 초기 데이터 설정</h2><div class=\"space-y-4\"><div class=\"flex items-center space-x-3\"><input id=\"empty-table\" type=\"radio\" name=\"data-option\" value=\"empty\" class=\"text-blue-600 focus:ring-blue-500\" checked> <label for=\"empty-table\" class=\"text-sm text-gray-700\">빈 테이블로 시작</label></div><div class=\"flex items-center space-x-3\"><input id=\"sample-data\" type=\"radio\" name=\"data-option\" value=\"sample\" class=\"text-blue-600 focus:ring-blue-500\"> <label for=\"sample-data\" class=\"text-sm text-gray-700\">샘플 데이터 포함</label></div><div class=\"flex items-center space-x-3\"><input id=\"import-data\" type=\"radio\" name=\"data-option\" value=\"import\" class=\"text-blue-600 focus:ring-blue-500\"> <label for=\"import-data\" class=\"text-sm text-gray-700\">CSV/JSON 파일 가져오기</label></div></div><div id=\"import-section\" class=\"mt-4 p-4 bg-gray-50 rounded-md hidden\"><label class=\"block text-sm font-medium text-gray-700 mb-2\">데이터 파일 선택</label> <input type=\"file\" class=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\" accept=\".csv,.json\"></div></div><!-- Action Buttons --><div class=\"flex space-x-3\"><button id=\"create-table\" class=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-md font-medium disabled:bg-gray-300 disabled:cursor-not-allowed\" disabled>테이블 생성</button> <button class=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-md font-medium hover:bg-gray-50\">취소</button></div></div></div></div><!-- JavaScript for interactivity --> <script>\n\t\t\t// Templates data - hardcoded for now to avoid JSON parsing issues\n\t\t\tconst schemaTemplates = {\n\t\t\t\t// Business templates\n\t\t\t\t\"customer\": {\n\t\t\t\t\tname: \"customer_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tname: { type: \"string\", title: \"이름\", minLength: 1 },\n\t\t\t\t\t\t\temail: { type: \"string\", format: \"email\", title: \"이메일\" },\n\t\t\t\t\t\t\tcompany: { type: \"string\", title: \"회사명\" },\n\t\t\t\t\t\t\tphone: { type: \"string\", title: \"연락처\", pattern: \"^[0-9-+()\\\\s]+$\" },\n\t\t\t\t\t\t\tinterest_level: { type: \"string\", title: \"관심도\", enum: [\"높음\", \"중간\", \"낮음\"] },\n\t\t\t\t\t\t\tregistration_date: { type: \"string\", format: \"date\", title: \"등록일\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"name\", \"email\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"project\": {\n\t\t\t\t\tname: \"project_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttitle: { type: \"string\", title: \"제목\", minLength: 1 },\n\t\t\t\t\t\t\tdescription: { type: \"string\", title: \"설명\" },\n\t\t\t\t\t\t\tassignee: { type: \"string\", title: \"담당자\" },\n\t\t\t\t\t\t\tstatus: { type: \"string\", title: \"상태\", enum: [\"TODO\", \"진행중\", \"완료\"] },\n\t\t\t\t\t\t\tpriority: { type: \"integer\", title: \"우선순위\", minimum: 1, maximum: 5 },\n\t\t\t\t\t\t\tdue_date: { type: \"string\", format: \"date\", title: \"마감일\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"title\", \"status\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"inventory\": {\n\t\t\t\t\tname: \"inventory_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tproduct_name: { type: \"string\", title: \"상품명\", minLength: 1 },\n\t\t\t\t\t\t\tcategory: { type: \"string\", title: \"카테고리\" },\n\t\t\t\t\t\t\tquantity: { type: \"integer\", title: \"수량\", minimum: 0 },\n\t\t\t\t\t\t\tprice: { type: \"number\", title: \"가격\", minimum: 0 },\n\t\t\t\t\t\t\tsupplier: { type: \"string\", title: \"공급업체\" },\n\t\t\t\t\t\t\tlast_updated: { type: \"string\", format: \"date-time\", title: \"최종 업데이트\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"product_name\", \"quantity\", \"price\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"event\": {\n\t\t\t\t\tname: \"event_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttitle: { type: \"string\", title: \"제목\", minLength: 1 },\n\t\t\t\t\t\t\tdate: { type: \"string\", format: \"date\", title: \"날짜\" },\n\t\t\t\t\t\t\ttime: { type: \"string\", title: \"시간\", pattern: \"^([01]?[0-9]|2[0-3]):[0-5][0-9]$\" },\n\t\t\t\t\t\t\tlocation: { type: \"string\", title: \"장소\" },\n\t\t\t\t\t\t\tattendees: { type: \"integer\", title: \"참석자 수\", minimum: 0 },\n\t\t\t\t\t\t\ttype: { type: \"string\", title: \"이벤트 유형\", enum: [\"회의\", \"워크샵\", \"세미나\", \"파티\", \"기타\"] }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"title\", \"date\", \"time\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// Game templates\n\t\t\t\t\"quest\": {\n\t\t\t\t\tname: \"quest_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tquest_name: { type: \"string\", title: \"퀘스트명\", minLength: 1 },\n\t\t\t\t\t\t\tdescription: { type: \"string\", title: \"설명\" },\n\t\t\t\t\t\t\tquest_type: { type: \"string\", title: \"퀘스트 유형\", enum: [\"메인\", \"서브\", \"일일\", \"주간\", \"이벤트\"] },\n\t\t\t\t\t\t\tdifficulty: { type: \"string\", title: \"난이도\", enum: [\"쉬움\", \"보통\", \"어려움\", \"매우어려움\"] },\n\t\t\t\t\t\t\tlevel_requirement: { type: \"integer\", title: \"필요 레벨\", minimum: 1, maximum: 100 },\n\t\t\t\t\t\t\treward_exp: { type: \"integer\", title: \"보상 경험치\", minimum: 0 },\n\t\t\t\t\t\t\treward_gold: { type: \"integer\", title: \"보상 골드\", minimum: 0 },\n\t\t\t\t\t\t\treward_items: { type: \"string\", title: \"보상 아이템\" },\n\t\t\t\t\t\t\tcompletion_condition: { type: \"string\", title: \"완료 조건\" },\n\t\t\t\t\t\t\tstatus: { type: \"string\", title: \"상태\", enum: [\"활성\", \"비활성\", \"테스트중\"] }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"quest_name\", \"quest_type\", \"difficulty\", \"level_requirement\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"shop_item\": {\n\t\t\t\t\tname: \"shop_item_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\titem_name: { type: \"string\", title: \"상품명\", minLength: 1 },\n\t\t\t\t\t\t\tdescription: { type: \"string\", title: \"설명\" },\n\t\t\t\t\t\t\tcategory: { type: \"string\", title: \"카테고리\", enum: [\"무기\", \"방어구\", \"소모품\", \"장식품\", \"재료\", \"기타\"] },\n\t\t\t\t\t\t\trarity: { type: \"string\", title: \"등급\", enum: [\"일반\", \"고급\", \"희귀\", \"영웅\", \"전설\"] },\n\t\t\t\t\t\t\tprice_gold: { type: \"integer\", title: \"골드 가격\", minimum: 0 },\n\t\t\t\t\t\t\tprice_gem: { type: \"integer\", title: \"보석 가격\", minimum: 0 },\n\t\t\t\t\t\t\tstock: { type: \"integer\", title: \"재고\", minimum: -1 },\n\t\t\t\t\t\t\tlevel_requirement: { type: \"integer\", title: \"필요 레벨\", minimum: 1, maximum: 100 },\n\t\t\t\t\t\t\tis_limited: { type: \"boolean\", title: \"한정 상품\" },\n\t\t\t\t\t\t\tsale_start_date: { type: \"string\", format: \"date\", title: \"판매 시작일\" },\n\t\t\t\t\t\t\tsale_end_date: { type: \"string\", format: \"date\", title: \"판매 종료일\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"item_name\", \"category\", \"rarity\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"game_item\": {\n\t\t\t\t\tname: \"game_item_management\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\titem_name: { type: \"string\", title: \"아이템명\", minLength: 1 },\n\t\t\t\t\t\t\tdescription: { type: \"string\", title: \"설명\" },\n\t\t\t\t\t\t\titem_type: { type: \"string\", title: \"아이템 유형\", enum: [\"무기\", \"방어구\", \"악세서리\", \"소모품\", \"재료\", \"퀘스트\", \"기타\"] },\n\t\t\t\t\t\t\trarity: { type: \"string\", title: \"등급\", enum: [\"일반\", \"고급\", \"희귀\", \"영웅\", \"전설\", \"신화\"] },\n\t\t\t\t\t\t\tlevel_requirement: { type: \"integer\", title: \"필요 레벨\", minimum: 1, maximum: 100 },\n\t\t\t\t\t\t\tattack_power: { type: \"integer\", title: \"공격력\", minimum: 0 },\n\t\t\t\t\t\t\tdefense_power: { type: \"integer\", title: \"방어력\", minimum: 0 },\n\t\t\t\t\t\t\thp_bonus: { type: \"integer\", title: \"체력 보너스\", minimum: 0 },\n\t\t\t\t\t\t\tmp_bonus: { type: \"integer\", title: \"마나 보너스\", minimum: 0 },\n\t\t\t\t\t\t\tspecial_effect: { type: \"string\", title: \"특수 효과\" },\n\t\t\t\t\t\t\tdurability: { type: \"integer\", title: \"내구도\", minimum: 0, maximum: 100 },\n\t\t\t\t\t\t\tmax_stack: { type: \"integer\", title: \"최대 중첩\", minimum: 1, maximum: 999 },\n\t\t\t\t\t\t\tdrop_location: { type: \"string\", title: \"획득 장소\" },\n\t\t\t\t\t\t\tcrafting_materials: { type: \"string\", title: \"제작 재료\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"item_name\", \"item_type\", \"rarity\"]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t\t// Tab functionality\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tconst tabButtons = document.querySelectorAll('.tab-button');\n\t\t\t\tconst tabContents = document.querySelectorAll('.tab-content');\n\t\t\t\t\n\t\t\t\ttabButtons.forEach(button => {\n\t\t\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\t\t\tconst tabId = button.id.replace('tab-', '');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Update tab buttons\n\t\t\t\t\t\ttabButtons.forEach(btn => {\n\t\t\t\t\t\t\tbtn.classList.remove('tab-active', 'border-blue-500', 'text-blue-600');\n\t\t\t\t\t\t\tbtn.classList.add('border-transparent', 'text-gray-500');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbutton.classList.add('tab-active', 'border-blue-500', 'text-blue-600');\n\t\t\t\t\t\tbutton.classList.remove('border-transparent', 'text-gray-500');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Update tab content\n\t\t\t\t\t\ttabContents.forEach(content => {\n\t\t\t\t\t\t\tcontent.classList.add('hidden');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdocument.getElementById(`content-${tabId}`).classList.remove('hidden');\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Template selection\n\t\t\t\tdocument.querySelectorAll('.template-btn').forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\t\tconst template = btn.dataset.template;\n\t\t\t\t\t\tconst templateData = schemaTemplates[template];\n\t\t\t\t\t\t\n\t\t\t\t\t\tdocument.getElementById('table-name').value = templateData.name;\n\t\t\t\t\t\tdocument.getElementById('schema-editor').value = JSON.stringify(templateData.schema, null, 2);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Switch to editor tab\n\t\t\t\t\t\tdocument.getElementById('tab-editor').click();\n\t\t\t\t\t\tvalidateSchema();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Example schema loading\n\t\t\t\tdocument.getElementById('load-example').addEventListener('click', () => {\n\t\t\t\t\t// Use the first available template as example\n\t\t\t\t\tconst firstTemplate = Object.keys(schemaTemplates)[0];\n\t\t\t\t\tif (firstTemplate) {\n\t\t\t\t\t\tconst templateData = schemaTemplates[firstTemplate];\n\t\t\t\t\t\tdocument.getElementById('schema-editor').value = JSON.stringify(templateData.schema, null, 2);\n\t\t\t\t\t\tdocument.getElementById('table-name').value = templateData.name;\n\t\t\t\t\t\tvalidateSchema();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Schema validation\n\t\t\t\tdocument.getElementById('validate-schema').addEventListener('click', validateSchema);\n\t\t\t\tdocument.getElementById('schema-editor').addEventListener('input', debounce(validateSchema, 500));\n\n\t\t\t\t// Data options\n\t\t\t\tdocument.querySelectorAll('input[name=\"data-option\"]').forEach(radio => {\n\t\t\t\t\tradio.addEventListener('change', (e) => {\n\t\t\t\t\t\tconst importSection = document.getElementById('import-section');\n\t\t\t\t\t\tif (e.target.value === 'import') {\n\t\t\t\t\t\t\timportSection.classList.remove('hidden');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\timportSection.classList.add('hidden');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// File upload drag and drop\n\t\t\t\tconst fileUpload = document.getElementById('file-upload');\n\t\t\t\tconst dropZone = fileUpload.parentElement.parentElement.parentElement;\n\n\t\t\t\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t\t\t\t\tdropZone.addEventListener(eventName, preventDefaults, false);\n\t\t\t\t});\n\n\t\t\t\tfunction preventDefaults(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\t['dragenter', 'dragover'].forEach(eventName => {\n\t\t\t\t\tdropZone.addEventListener(eventName, highlight, false);\n\t\t\t\t});\n\n\t\t\t\t['dragleave', 'drop'].forEach(eventName => {\n\t\t\t\t\tdropZone.addEventListener(eventName, unhighlight, false);\n\t\t\t\t});\n\n\t\t\t\tfunction highlight(e) {\n\t\t\t\t\tdropZone.classList.add('border-blue-400', 'bg-blue-50');\n\t\t\t\t}\n\n\t\t\t\tfunction unhighlight(e) {\n\t\t\t\t\tdropZone.classList.remove('border-blue-400', 'bg-blue-50');\n\t\t\t\t}\n\n\t\t\t\tdropZone.addEventListener('drop', handleDrop, false);\n\n\t\t\t\tfunction handleDrop(e) {\n\t\t\t\t\tconst dt = e.dataTransfer;\n\t\t\t\t\tconst files = dt.files;\n\t\t\t\t\thandleFiles(files);\n\t\t\t\t}\n\n\t\t\t\tfileUpload.addEventListener('change', (e) => {\n\t\t\t\t\thandleFiles(e.target.files);\n\t\t\t\t});\n\n\t\t\t\tfunction handleFiles(files) {\n\t\t\t\t\tif (files.length > 0) {\n\t\t\t\t\t\tconst file = files[0];\n\t\t\t\t\t\tif (file.type === 'application/json' || file.name.endsWith('.json')) {\n\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\treader.onload = (e) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst schema = JSON.parse(e.target.result);\n\t\t\t\t\t\t\t\t\tdocument.getElementById('schema-editor').value = JSON.stringify(schema, null, 2);\n\t\t\t\t\t\t\t\t\tdocument.getElementById('tab-editor').click();\n\t\t\t\t\t\t\t\t\tvalidateSchema();\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\talert('JSON 파일을 파싱할 수 없습니다: ' + error.message);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Create table button event listener\n\t\t\t\tdocument.getElementById('create-table').addEventListener('click', function() {\n\t\t\t\t\tconsole.log('🚀 테이블 생성 버튼 클릭됨');\n\t\t\t\t\t\n\t\t\t\t\tconst tableName = document.getElementById('table-name').value.trim();\n\t\t\t\t\tconst schemaText = document.getElementById('schema-editor').value.trim();\n\t\t\t\t\tconst dataOption = document.querySelector('input[name=\"data-option\"]:checked')?.value || 'empty';\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('📝 입력 데이터:', {\n\t\t\t\t\t\ttableName: tableName,\n\t\t\t\t\t\tschemaText: schemaText.substring(0, 100) + '...',\n\t\t\t\t\t\tdataOption: dataOption\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (!tableName || !schemaText) {\n\t\t\t\t\t\tconsole.warn('⚠️ 필수 입력 값이 누락됨');\n\t\t\t\t\t\talert('테이블 이름과 JSON Schema를 입력해주세요.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Validate table name format\n\t\t\t\t\tconst tableNamePattern = /^[a-zA-Z0-9_]+$/;\n\t\t\t\t\tif (!tableNamePattern.test(tableName)) {\n\t\t\t\t\t\talert('테이블 이름은 영어, 숫자, 언더스코어(_)만 사용할 수 있습니다.\\n띄어쓰기나 특수문자는 사용할 수 없습니다.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconsole.log('🔍 JSON Schema 파싱 중...');\n\t\t\t\t\t\tconst schema = JSON.parse(schemaText);\n\t\t\t\t\t\tconsole.log('✅ JSON Schema 파싱 성공:', schema);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 서버 API로 테이블 생성 요청\n\t\t\t\t\t\tconst requestData = {\n\t\t\t\t\t\t\ttable_name: tableName,\n\t\t\t\t\t\t\tschema: schemaText,\n\t\t\t\t\t\t\tdata_option: dataOption\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Debug: Log JSON data being sent\n\t\t\t\t\t\tconsole.log('📤 Sending JSON data:', requestData);\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('🌐 서버로 테이블 생성 요청 전송 중...');\n\t\t\t\t\t\tfetch('/api/table/create', {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: JSON.stringify(requestData)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\tconsole.log('📡 서버 응답 받음:', response.status);\n\t\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\t\tthrow new Error(`서버 오류: ${response.status}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tconsole.log('✅ 테이블 생성 성공:', data);\n\t\t\t\t\t\t\tif (data.success && data.redirect) {\n\t\t\t\t\t\t\t\tconsole.log('🔄 테이블 편집 페이지로 리다이렉트:', data.redirect);\n\t\t\t\t\t\t\t\twindow.location.href = data.redirect;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('서버 응답에 오류가 있습니다.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.error('❌ 테이블 생성 오류:', error);\n\t\t\t\t\t\t\talert('테이블 생성 중 오류가 발생했습니다: ' + error.message);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('❌ JSON Schema 파싱 오류:', error);\n\t\t\t\t\t\talert('JSON Schema 형식이 올바르지 않습니다: ' + error.message);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t});\n\n\t\t\tfunction validateSchema() {\n\t\t\t\tconst schemaText = document.getElementById('schema-editor').value.trim();\n\t\t\t\tconst tableName = document.getElementById('table-name').value.trim();\n\t\t\t\tconst statusDiv = document.getElementById('schema-status');\n\t\t\t\tconst createButton = document.getElementById('create-table');\n\t\t\t\tconst preview = document.getElementById('table-preview');\n\n\t\t\t\tif (!schemaText || !tableName) {\n\t\t\t\t\tstatusDiv.classList.add('hidden');\n\t\t\t\t\tcreateButton.disabled = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst schema = JSON.parse(schemaText);\n\t\t\t\t\t\n\t\t\t\t\tif (schema.type === 'object' && schema.properties) {\n\t\t\t\t\t\tconst fieldCount = Object.keys(schema.properties).length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tstatusDiv.classList.remove('hidden');\n\t\t\t\t\t\tstatusDiv.classList.remove('bg-red-50', 'border-red-200');\n\t\t\t\t\t\tstatusDiv.classList.add('bg-green-50', 'border-green-200');\n\t\t\t\t\t\tstatusDiv.querySelector('h4').textContent = '스키마 검증 완료';\n\t\t\t\t\t\tstatusDiv.querySelector('h4').className = 'text-sm font-medium text-green-800';\n\t\t\t\t\t\tstatusDiv.querySelector('svg').className = 'h-5 w-5 text-green-600 mr-3';\n\t\t\t\t\t\tdocument.getElementById('schema-fields-count').textContent = `필드 개수: ${fieldCount}개`;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcreateButton.disabled = false;\n\t\t\t\t\t\tupdatePreview(schema, tableName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('스키마는 object 타입이어야 하며 properties를 포함해야 합니다.');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tstatusDiv.classList.remove('hidden');\n\t\t\t\t\tstatusDiv.classList.remove('bg-green-50', 'border-green-200');\n\t\t\t\t\tstatusDiv.classList.add('bg-red-50', 'border-red-200');\n\t\t\t\t\tstatusDiv.querySelector('h4').textContent = '스키마 오류';\n\t\t\t\t\tstatusDiv.querySelector('h4').className = 'text-sm font-medium text-red-800';\n\t\t\t\t\tstatusDiv.querySelector('svg').className = 'h-5 w-5 text-red-600 mr-3';\n\t\t\t\t\tstatusDiv.querySelector('svg').innerHTML = '<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\"/>';\n\t\t\t\t\tdocument.getElementById('schema-fields-count').textContent = error.message;\n\t\t\t\t\t\n\t\t\t\t\tcreateButton.disabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction updatePreview(schema, tableName) {\n\t\t\t\tconst preview = document.getElementById('table-preview');\n\t\t\t\t\n\t\t\t\tlet html = `\n\t\t\t\t\t<div class=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n\t\t\t\t\t\t<h3 class=\"text-sm font-medium text-gray-900\">${tableName}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"overflow-x-auto\">\n\t\t\t\t\t\t<table class=\"min-w-full divide-y divide-gray-200\">\n\t\t\t\t\t\t\t<thead class=\"bg-gray-50\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\t// Add headers\n\t\t\t\tfor (const [fieldName, fieldDef] of Object.entries(schema.properties)) {\n\t\t\t\t\tconst title = fieldDef.title || fieldName;\n\t\t\t\t\tconst required = schema.required && schema.required.includes(fieldName) ? '*' : '';\n\t\t\t\t\thtml += `<th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">${title}${required}</th>`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thtml += `\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody class=\"bg-white divide-y divide-gray-200\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\t// Add sample row\n\t\t\t\tfor (const [fieldName, fieldDef] of Object.entries(schema.properties)) {\n\t\t\t\t\tlet sampleValue = '';\n\t\t\t\t\tswitch (fieldDef.type) {\n\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\tif (fieldDef.format === 'email') sampleValue = 'example@email.com';\n\t\t\t\t\t\t\telse if (fieldDef.format === 'date') sampleValue = '2024-01-01';\n\t\t\t\t\t\t\telse if (fieldDef.enum) sampleValue = fieldDef.enum[0];\n\t\t\t\t\t\t\telse sampleValue = '샘플 텍스트';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'integer':\n\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\tsampleValue = fieldDef.minimum || 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tsampleValue = 'true';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsampleValue = '샘플';\n\t\t\t\t\t}\n\t\t\t\t\thtml += `<td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">${sampleValue}</td>`;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thtml += `\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\tpreview.innerHTML = html;\n\t\t\t}\n\n\t\t\tfunction debounce(func, wait) {\n\t\t\t\tlet timeout;\n\t\t\t\treturn function executedFunction(...args) {\n\t\t\t\t\tconst later = () => {\n\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\tfunc(...args);\n\t\t\t\t\t};\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t\t};\n\t\t\t}\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.AppLayout("새 테이블 생성 - Progressive").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
